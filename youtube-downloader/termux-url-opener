# COLORS
GREEN="\e[32m"
CYAN="\e[36m"
MAGENTA="\e[35m"
YELLOW="\e[33m"
BLUE="\e[34m"
RED="\e[31m"

# BOLD COLORS
GREEN_B="\e[01;32m"
CYAN_B="\e[01;36m"
MAGENTA_B="\e[01;35m"
YELLOW_B="\e[01;33m"
BLUE_B="\e[01;34m"
RED_B="\e[01;31m"

# RESET
RESET="\e[0m"

clear
command -v yt-dlp || printf "${RED_B} Please install yt-dlp manually or run the the install.sh script again.\n${RESET}"
OUTPUT_PATH="/storage/emulated/0/Youtube"

# New ASCII Art Banner
echo -e "${RED}"
cat <<'EOF'
                                999999999999999999999999999999999999    
                              9999999999999999999999999999999999999999  
 0000  0000                   999         99999999   499999999999999999 
 0000  0000                  9999         99999999   499999999999999999 
  00000000  0000    000 000  999999    99646994499   46 3999995 1999999 
   000000 00000000 0000 000  999999    99   99   9        99       9999 
    00000 000  000 0000 000  999999    99   99   9   49   53   93   999 
    0000  000  000 0000 000  999999    99   99   9   49   51        999 
    0000  000  000 0000 000  999999    99   99   9   49   51   99999999 
    0000  000  000 0000 000  999999    99   99   9   49   53   93   999 
    0000   0000000 00000000  999999    99        9        99       9999 
     00      000     00  00   99999966999955996699966995499999625999999 
                              9999999999999999999999999999999999999999  
                                999999999999999999999999999999999999   

                           Youtube Downloader
                           @Bornelabs Papers
EOF
echo -e "${RESET}"

# Menu & Info
echo -e "${CYAN}╔════════════════════════════════════════╗"                                                                         
echo -e "${RED}║ ♚ Paper : Youtube Downloader           ║"
echo -e "${GREEN}║ ♚ Author  : @BrianxBorne               ║"
echo -e "${CYAN}╠════════════════════════════════════════╝"
echo -e "${CYAN}╠═▶ [𝗦𝗲𝗹𝗲𝗰𝘁 𝗔 𝗙𝗼𝗿𝗺𝗮𝘁]  ➳"
echo -e "${GREEN}╠═▶ 1. Music Mp3♫"
echo -e "${GREEN}╠═▶ 2. Video 360p"
echo -e "${GREEN}╠═▶ 3. Video 480p"
echo -e "${GREEN}╠═▶ 4. Video 720p"
echo -e "${GREEN}╠═▶ 5. Video 1080p"
echo -e "${GREEN}╠═▶ 6. Video 2160p"
echo -e "${GREEN}╠═▶ 7. Exit Termux-YTD"
printf "${GREEN} ╚═:➤  ${RESET}"
read option

if [[ -z $option ]]; then
	clear
	printf "${RED_B} Please choose an option!\n${RESET}"
else
	case $option in
		1) yt-dlp -f 140 $1 ;;
		2) yt-dlp -f "best[height<=360]" $1 ;;
		3) yt-dlp -f "best[height<=480]" $1 ;;
		4) yt-dlp -f "best[height<=720]" $1 ;;
		5) yt-dlp -f "best[height<=1080]" $1 ;;
		6) yt-dlp -f "best[height<=2160]" $1 ;;
		7) exit 0 ;;
	esac 
fi

if [ $? -eq 0 ]; then
  printf "${GREEN_B}Files correctly downloaded at ${OUTPUT_PATH}!${RESET}\n"
else
  printf "${RED_B}An error occurred when downloading the files!${RESET}\n"
  exit 0
fi

if [ $(echo -n $TERMUX_API_VERSION | wc -c) -gt 1 ]; then
  printf "${YELLOW_B}Scanning ${OUTPUT_PATH}${RESET}\n"
  termux-media-scan -v -r "${OUTPUT_PATH}"
	if [ $? -eq 0 ]; then
  	printf "${GREEN_B}${OUTPUT_PATH} correctly scanned${RESET}\n"
	else
  	printf "${RED_B}An error occurred during the ${OUTPUT_PATH} scanning${RESET}\n"
	fi
fi

printf "${MAGENTA_B}Program completed. Press any key to exit.${RESET}\n"
read x

